// This is a manifest file that'll be compiled into application.js, which will include all the files
// listed below.
//
// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts,
// or vendor/assets/javascripts of plugins, if any, can be referenced here using a relative path.
//
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// the compiled file.
//
// WARNING: THE FIRST BLANK LINE MARKS THE END OF WHAT'S TO BE PROCESSED, ANY BLANK LINE SHOULD
// GO AFTER THE REQUIRES BELOW.
//
//= require jquery
//= require jquery_ujs
//= require bootstrap
//= require bootstrap-modal-responsive-fix

$(document).ready(function(){
	
	$.errorList = function(responseText) {
		var errorList = $('<ul />');
		$.each($.parseJSON(responseText).errors, function(field,errors){
			errorList.append('<li>' + field + ' ' + errors.join(", ") + '</li>');
		});
		errorList.prepend($("<h4>Please correct erros below</h4>"));
		return errorList.html();
	}
	
	// campaign change plan select
	$.changePlan = function(e) {
		var plan = $(e).val();
		var id = $(e).data("id");		
		$.post("/api/campaigns/" + id,{_method: "PUT", campaign: {plan: plan}}, function(data){
			console.log(data);
			$(".popover").fadeOut();				
		});
	}
	
	// campaign change theme select
	$.changeTheme = function(e) {
		var theme = $(e).val();
		var id = $(e).data("id");		
		$.post("/api/campaigns/" + id,{_method: "PUT", campaign: {theme: theme}}, function(data){
			console.log(data);
			$(".popover").fadeOut();
		});
		return true;
	}
		
	$.initEvents = function() {
		// new campaign form	
		$("form#new_campaign[data-remote=true]").
		unbind('ajax:beforeSend').
		on('ajax:beforeSend', function(event, data, status) {
			$(this).find(".alert").remove();
			var submit = $(this).find("button[type=submit]");
			submit.data("val", submit.text()).attr('disabled',true).text('...');
		}).
		unbind('ajax:error').		
		on('ajax:error', function(event, xhr, status) {
			var submit = $(this).find("button[type=submit]");
			// $("body").prepend($("#campaigns_template_error").html().
			// 					replace(/\${message}/, $.errorList(xhr.responseText)));
			var errs = $($("#campaigns_template_error").html().
									replace(/\${message}/, $.errorList(xhr.responseText)));
			errs.insertAfter($(".mainmenu"));								
			submit.removeAttr('disabled').text(submit.data('val'));
		}).
		unbind('ajax:success').				
		on("ajax:success", function(event, data, status) {
			
			var form = $(this);
			var submit = form.find("button[type=submit]");
			submit.removeAttr('disabled').text(submit.data('val'));
			form.find("#campaign_name").val("");
			form.find("#campaign_plan").val("");		
			form.prepend( $( $("#campaigns_template_success").html()).hide().fadeIn() );
		});
		
		// campaign delete button
		$("a.destroy").
		unbind("ajax:beforeSend").
		on('ajax:beforeSend', function(event, data, status) {
			var a = $(this);
			a.data("text", a.text()).attr('disabled',true).text('...');
		}).
		unbind("ajax:error").		
		on('ajax:error', function(event, xhr, status) {

			var a = $(this);
			var errs = $($("#campaigns_template_error").html().
									replace(/\${message}/, $.errorList(xhr.responseText)));
			errs.insertAfter($(".mainmenu"));
			a.removeAttr('disabled').text(a.data('val'));
		}).
		unbind("ajax:success").				
		on("ajax:success", function(event, data, status) {
			console.log($(this))
			var tr = $(this).parents("li");
			tr.fadeOut(function () { tr.remove() });
		});
		
		$('a[rel=tooltip]').tooltip();
		$('a[rel=popover]').popover();
	
	}
	
	$.parseCampaignRowTmp = function(campaign) {
		var campaigns_tr = $("#campaigns_template_tr").html(),
				status_classes = {online: "success", deleted: "error", pending: "warning", maintenance: "warning"}
				campaign_class = status_classes[campaign.status];
				
		campaigns_tr = campaigns_tr.
						replace(/\${campaign_class}/g, campaign_class).
						replace(/\${slug}/g, campaign.slug).
						replace(/\${name}/g, campaign.name).
						replace(/\${plan}/g, campaign.plan).
						replace(/\${status}/g, campaign.status).
						replace(/\${price}/g, campaign.price).								
						replace(/\${theme}/g, campaign.theme).																	
						replace(/\${id}/g, campaign.id);
		return 	campaigns_tr;			
	}
	
	$.setCampaignRowStatus = function(tr) {
		if (tr.find(".status").text() != "online") {
			tr.find(".visit").html("...");
			tr.find(".manage").html("...");			
			if (tr.find(".status").text() == "deleted" )
				tr.find(".actions").html('');			
			else
				tr.find(".actions").html('<%= image_tag "ajax-loader.gif" %>');
			tr.find(".change_campaign_plan").parents("span").text(tr.find(".plan").data("plan"));
			tr.find(".change_campaign_theme").parents("span").text(tr.find(".theme").data("theme"));
		}else{
			tr.find(".change_campaign_plan").val(tr.find(".plan").data("plan"));
			tr.find(".change_campaign_theme").val(tr.find(".theme").data("theme"));					
		}
	}
	
	$.updateCampaignRow = function(campaign) {
		
		var campaigns_tr = 	$.parseCampaignRowTmp(campaign);
		
	  $("li#campaign_" + campaign.id).replaceWith(campaigns_tr);
	
		$.setCampaignRowStatus( $("li#campaign_" + campaign.id) );
		
		$.initEvents();		
	}
	
	$.myCampaigns = function() {
			$.get("/api/campaigns", function (data) {

				var campaigns_table = $("#campaigns_template_table").html(),
						list 						= '';

				if (data.length == 0) {
					campaigns_table = "<h1>No apps found</h1>";
				}else{
					for (var i in data) {
						list += $.parseCampaignRowTmp(data[i]);
					}
					campaigns_table = campaigns_table.replace(/\${list}/, list );	
				}

				$(".main").html(campaigns_table);
				
				$("li.campaign").each(function(){
					$.setCampaignRowStatus($(this));
				});

				$.initEvents();
			});
		
	}
	
	$(".navbar a").click(function(){

		var href = $(this).attr("href");
		console.log(href);
		
		if(!(href.indexOf("#") > -1)) return true;
		
		$(".main").html("<div class=\"loading\"><img src=\"<%= image_path("ajax-loader.gif") %>\"></div>");
		
		switch(href){
			case "#my_campaigns":
			$.myCampaigns();
			break;
			default:
			$(".main").load(href.replace("#","/"),function() {
				$.initEvents();
			});
			break;
		}

		return false;
	});

	$.initEvents();	
	/*
	$.calculatePrice  = function() {
		
		var ps_count = 	Number($("#ps-web").val()) + Number($("#ps-worker").val());
		var base = ps_count > 1 ? (Number(ps_count) * 4000) + 2000 : 0;
		var addons = 	Number($("select#postgres").val()) + 
									Number($("select#memcachier").val()) + 
									Number($("select#sendgrid").val());
		var amount = 	Number(base) + 
									addons + 
									(Number($("select#support").val()) * 7000);

		$("#amount").text(amount/100);

	}
	
	if( $("body").hasClass("plans") ) {
		var postgres = {
			"dev" : ["level 01", "10,000 row limit","0 MB cache"],
			"basic" : ["level 02", "10 million row limit","0 MB cache"],
			"crane" : ["level 03", "Unlimited", "0.4 GB cache"],								
			"kappa" : ["level 04", "Unlimited", "0.8 GB cache"],
			"ronin" : ["level 05", "Unlimited", "1.7 GB cache"],
			"fugu" : ["level 06", "Unlimited", "3.75 GB cache"],
			"ika" : ["level 07", "Unlimited", "7.5 GB cache"],
			"zilla" : ["level 08", "Unlimited", "17 GB cache"],								
			"baku" : ["level 09", "Unlimited", "34 GB cache"],
			"mecha" : ["level 10", "Unlimited", "68 GB cache"]
		}
		
		var sendgrid = {
			"starter" : ["level 01", "200 emails per day"],
			"bronze" : ["level 02", "40,000 emails per month"],
			"silver" : ["level 03", "100,000 emails per month"],
			"gold" : ["level 04", "300,000 emails per month"],
			"platinum" : ["level 05", "700,000 emails per month"]
		}
		
		$.get("/pages/addons",function(data){

			$("select#postgres").change(function(){
				$("#postgres_desc").text( postgres[$("select#postgres option:selected").data("name")].join(",") );
			});
		
			$("select#sendgrid").change(function(){
				$("#sendgrid_desc").text( sendgrid[$("select#sendgrid option:selected").data("name")].join(",") );
			});
			
			$("#ps-web, #ps-worker, select#postgres, select#memcachier, select#sendgrid, select#support").change(function(){
				$.calculatePrice();
			});
						
			for( var i = 0; i < data.length; i++) {
				var addon = data[i];
				if ( addon.name.indexOf('heroku-postgresql') > -1 ) {
					var name = addon.name.replace('heroku-postgresql:','');
					$("select#postgres").append($("<option value='"+addon.price.cents+"' data-name='"+name+"'>"+postgres[name].shift()+"</option>"))
					
				}
				
				if ( addon.name.indexOf('memcachier') > -1 ) {
					var name = addon.name.replace('memcachier:','');
					$("select#memcachier").append($("<option value='"+addon.price.cents+"' data-name='"+name+"'>"+name+"</option>"))
					
				}
				
				if ( addon.name.indexOf('sendgrid') > -1 ) {
					var name = addon.name.replace('sendgrid:','');
					$("select#sendgrid").append($("<option value='"+addon.price.cents+"' data-name='"+name+"'>"+sendgrid[name].shift()+"</option>"))
					
				}
			}
			
			$("select#postgres").val("0");
			$("select#memcachier").val("0");
			$("select#sendgrid").val("0");			
			$.calculatePrice();		
			
			function NASort(a, b) {    
			    if (a.innerHTML == 'NA') {
			        return 1;   
			    }
			    else if (b.innerHTML == 'NA') {
			        return -1;   
			    }       
			    return (a.innerHTML > b.innerHTML) ? 1 : -1;
			};

			$('select#postgres option').sort(NASort).appendTo('select#postgres');
			$('select#sendgrid option').sort(NASort).appendTo('select#sendgrid');
			$('select#memcachier option').sort(NASort).appendTo('select#memcachier');			
			
		});
	}
	*/
});
